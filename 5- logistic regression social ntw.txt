import pandas as pd 
import numpy as np 
from sklearn.model_selection import train_test_split 
from sklearn.preprocessing import LabelEncoder, StandardScaler 
from sklearn.linear_model import LogisticRegression 
from sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score 
# Step 1: Load the dataset 
file_path = "D:/Social_Network_Ads.csv" 
df = pd.read_csv("D:/Social_Network_Ads.csv") 
# Step 2: Data Preprocessing 
df = df.drop(columns=['User ID'])  # Remove irrelevant column 
encoder = LabelEncoder() 
df['Gender'] = encoder.fit_transform(df['Gender'])  # Encode categorical variable 
# Step 3: Splitting Data into Training and Testing sets 
X = df.drop(columns=['Purchased']) 
y = df['Purchased'] 
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42) 
# Step 4: Feature Scaling 
scaler = StandardScaler() 
X_train = scaler.fit_transform(X_train) 
X_test = scaler.transform(X_test) 
# Step 5: Train Logistic Regression Model 
model = LogisticRegression() 
model.fit(X_train, y_train) 
# Step 6: Make Predictions 
y_pred = model.predict(X_test) 
# Step 7: Evaluate Model 
conf_matrix = confusion_matrix(y_test, y_pred) 
accuracy = accuracy_score(y_test, y_pred) 
precision = precision_score(y_test, y_pred) 
recall = recall_score(y_test, y_pred) 
error_rate = 1 - accuracy 
# Display Results 
print("Confusion Matrix:") 
print(conf_matrix) 
print(f"Accuracy: {accuracy * 100:.2f}%") 
print(f"Error Rate: {error_rate * 100:.2f}%") 
print(f"Precision: {precision:.2f}") 
print(f"Recall: {recall:.2f}")